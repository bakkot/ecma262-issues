'use strict';

/*
states:
needs editor
needs specialist (e.g. someone who understands ISO datetime stuff)
needs work (i.e. that anyone could do)
needs committee (i.e. we need to decide what behavior we want)
blocked
pending stage 4
unsure (i.e. I personally am not sure)

kind:
editorial, normative, bugfix, not an issue
*/

let issues = [
  {
    number: 1354,
    title: 'Memory model bug for data-race free programs',
    pr: false,
    kind: 'normative',
    status: 'needs specialist',
  },
  {
    number: 1353,
    title: 'Fix indentation of the "Valid Chosen Reads" and "Coherent Reads"',
    pr: true,
    kind: 'editorial',
    status: 'needs editor',
  },
  {
    number: 1352,
    title: 'Editorial: Fix a word choice typo in intro text',
    pr: true,
    kind: 'editorial',
    status: 'needs editor',
  },
  {
    number: 1351,
    title: 'Wonky evaluation order for SuperCall',
    pr: false,
    kind: 'normative',
    status: 'blocked',
    notes: 'should wait for the class extends null stuff, probably',
  },
  {
    number: 1350,
    title: 'Layering: Distinguish template literals to embedders',
    pr: true,
    kind: 'editorial',
    status: 'needs committee',
  },
  {
    number: 1346,
    title: 'add Symbol.prototype.description getter',
    pr: true,
    kind: 'normative',
    status: 'pending stage 4',
  },
  {
    number: 1343,
    title: 'Editorial: statically enforcing regex grammar for literals',
    pr: false,
    kind: 'bugfix',
    status: 'needs work',
    notes: 'really just needs a bugfix PR to be made/approved per the issue',
  },
  {
    number: 1341,
    title: 'TC39 expertise wanted for "protected state" in web classes',
    pr: false,
    kind: 'not an issue',
    status: 'needs specialist',
  },
  {
    number: 1340,
    title: '[Normative] Make Array.prototype.sort stable',
    pr: true,
    kind: 'normative',
    status: 'needs committee',
  },
  {
    number: 1339,
    title: 'Integer indexed exotic object [[Set]] can not ignore receiver',
    pr: false,
    kind: 'normative',
    status: 'needs work',
    notes: 'web compat issues with current spec',
  },
  {
    number: 1336,
    title: 'LineTerminator Grammar misformatted start with ES2018',
    pr: false,
    kind: 'editorial',
    status: 'needs editor',
    notes: 'duplicate of #1334',
  },
  {
    number: 1335,
    title: 'Editorial: Add a link to the collection of historical editions',
    pr: true,
    kind: 'editorial',
    status: 'unsure',
  },
  {
    number: 1334,
    title: 'Productions involving character abbreviations are rendered incorrectly',
    pr: false,
    kind: 'editorial',
    status: 'blocked',
    notes: 'ecmarkup, has PR: https://github.com/bterlson/ecmarkup/pull/149'
  },
  {
    number: 1333,
    title: 'Consider defining a Realm (global) for all objects, not just Functions',
    pr: false,
    kind: 'editorial',
    status: 'unsure',
  },
  {
    number: 1331,
    title: 'Normative: Array Constructor',
    pr: false,
    kind: 'not an issue',
    status: 'unsure',
  },
  {
    number: 1330,
    title: 'Editorial: add ‘!’ to CreateDataPropertyOrThrow calls in PropertyDefinitionEvaluation',
    pr: true,
    kind: 'editorial',
    status: 'needs editor',
  },
  {
    number: 1329,
    title:
      "9.4.2 states array objects' indexed properties are always array indices, but they're only coerced to integer indices in all the array prototype methods",
    pr: false,
    kind: 'editorial',
    status: 'needs editor',
  },
  {
    number: 1328,
    title: 'Editorial: Add explicit Return to Await',
    pr: true,
    kind: 'editorial',
    status: 'needs editor',
  },
  {
    number: 1326,
    title: 'Editorial: Correct variable terminology',
    pr: true,
    kind: 'editorial',
    status: 'needs editor',
  },
  {
    number: 1325,
    title: 'Editorial: Better relate ECMAScript time values to POSIX and UTC',
    pr: true,
    kind: 'editorial',
    status: 'needs specialist',
  },
  {
    number: 1323,
    title: 'Extending "Forbidden Extensions"',
    pr: false,
    kind: 'normative',
    status: 'needs committee',
  },
  {
    number: 1321,
    title: 'Normative: Fix extending null',
    pr: true,
    kind: 'normative',
    status: 'needs committee',
    notes: 'we should decide what behavior we want',
  },
  {
    number: 1320,
    title: 'Normative: Make non-writable prototype properties not prevent assigning to instance',
    pr: true,
    kind: 'normative',
    status: 'blocked',
    notes: 'waiting on web-compat data, dupe of #1307',
  },
  {
    number: 1318,
    title: 'Normative: IsRegExp: make `Symbol.match` not be uniquely special',
    pr: true,
    kind: 'normative',
    status: 'needs committee',
  },
  {
    number: 1317,
    title: 'Editorial: Update date-time format language',
    pr: true,
    kind: 'editorial',
    status: 'needs editor',
  },
  {
    number: 1314,
    title: 'Editorial: Convert @@ notation to %% notation for well-known Symbols',
    pr: true,
    kind: 'editorial',
    status: 'needs editor',
  },
  {
    number: 1313,
    title: 'Rationalizing Symbol.species',
    pr: false,
    kind: 'not an issue',
    status: 'needs committee',
  },
  {
    number: 1312,
    title: ' Layering: Rename Module.Instantiate to Module.Link ',
    pr: true,
    kind: 'editorial',
    status: 'needs editor',
    notes: 'waiting on #1311',
  },
  {
    number: 1311,
    title: 'Layering: Enable cyclic dependencies with non-STMR module types',
    pr: true,
    kind: 'editorial',
    status: 'needs editor',
  },
  {
    number: 1309,
    title: 'add Array.prototype.flatMap and Array.prototype.flat',
    pr: true,
    kind: 'normative',
    status: 'pending stage 4',
  },
  {
    number: 1308,
    title: 'Fixing description of [[FunctionKind]] internal slot of Function Object.',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 1307,
    title: 'Make non-writable prototype properties not prevent assigning to instance',
    pr: true,
    kind: 'normative',
    status: 'blocked',
    notes: 'waiting on web-compat data',
  },
  {
    number: 1306,
    title: 'Normative: GetExportedNames adjustments for late-defined export names',
    pr: true,
    kind: 'normative',
    status: 'unsure',
  },
  {
    number: 1305,
    title: 'Fixing description of [[thisMode]] internal slot of Function Object.',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 1304,
    title: 'Stray &lt in spec',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
    notes: 'ecmarkup',
  },
  {
    number: 1302,
    title: 'Editorial: Quote properties across the board.',
    pr: true,
    kind: 'editorial',
    status: 'needs editor',
  },
  {
    number: 1301,
    title: 'Editorial: plug some holes in the coverage of syntax-directed operations',
    pr: true,
    kind: 'bugfix',
    status: 'needs editor',
  },
  {
    number: 1300,
    title: 'Misc Editorial',
    pr: true,
    kind: 'editorial',
    status: 'needs editor',
  },
  {
    number: 1299,
    title: 'Clarification requested for interaction between ArraySetLength and Array.protoype.{concat,push,unshift}',
    pr: false,
    kind: 'not an issue',
    status: 'unsure',
  },
  {
    number: 1295,
    title: '`spread` is mistakenly called "an operator" in the introduction section of ES2018',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 1294,
    title: 'Can ECMAScript be fully compatible with PCRE?',
    pr: false,
    kind: 'not an issue',
    status: 'unsure',
  },
  {
    number: 1290,
    title: 'The [[ExportName]] field of ExportEntry Record can also be null',
    pr: false,
    kind: 'editorial',
    status: 'needs editor',
  },
  {
    number: 1288,
    title: 'Normative: Use GetMethod instead of GetV to get iterator `next`',
    pr: true,
    kind: 'normative',
    status: 'needs committee',
  },
  {
    number: 1287,
    title: 'Text encoding of spec.html: ascii or utf-8?',
    pr: false,
    kind: 'editorial',
    status: 'needs editor',
  },
  {
    number: 1284,
    title: 'Editorial: Correct and make readable for-in/of/await-of static semantics ',
    pr: true,
    kind: 'bugfix',
    status: 'needs editor',
  },
  {
    number: 1283,
    title: 'Please use uint8_t instead of unsigned char etc',
    pr: false,
    kind: 'editorial',
    status: 'unsure',
  },
  {
    number: 1281,
    title: 'how does for-in test for presence of a property in the enumerated object?',
    pr: false,
    kind: 'editorial',
    status: 'blocked',
    notes: 'see https://github.com/bakkot/for-in-exploration',
  },
  {
    number: 1278,
    title: 'disband "Terms and Definitions"',
    pr: false,
    kind: 'editorial',
    status: 'needs editor',
  },
  {
    number: 1277,
    title: 'Editorial: Step 12 of Array#splice sets the length of the result Array',
    pr: true,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 1275,
    title: 'Normative: Add String.prototype.{trimStart/trimEnd} (+ trimLeft/trimRight)',
    pr: true,
    kind: 'normative',
    status: 'pending stage 4',
  },
  {
    number: 1274,
    title: 'Normative: add `Object.fromEntries`',
    pr: true,
    kind: 'normative',
    status: 'pending stage 4',
  },
  {
    number: 1273,
    title: '"ECMAScript function object"',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 1271,
    title: 'Array.sort() sorted order invariant does not distinguish undefined and missing values',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 1270,
    title: 'Site loading is too slow',
    pr: false,
    kind: 'not an issue',
    status: 'needs work',
  },
  {
    number: 1264,
    title: "What's the reason for the fallback in OrdinaryCreateFromConstructor?",
    pr: false,
    kind: 'not an issue',
    status: 'unsure',
  },
  {
    number: 1257,
    title: 'Editorial: Suspend execution context in many places is mislinked',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 1254,
    title: 'Editorial: Clarification on auto semicolon insertion',
    pr: false,
    kind: 'not an issue',
    status: 'needs work',
  },
  {
    number: 1250,
    title: 'Normative: Reduce the number of ticks in async/await',
    pr: true,
    kind: 'normative',
    status: 'unsure',
  },
  {
    number: 1245,
    title: 'Editorial: Remove "Outside" wording for eval errors',
    pr: true,
    kind: 'editorial',
    status: 'needs editor',
  },
  {
    number: 1244,
    title: 'Integer index vs. array index in [[OwnPropertyKeys]]() on TypedArrays',
    pr: false,
    kind: 'not an issue',
    status: 'unsure',
  },
  {
    number: 1241,
    title: 'Editorial: Consistency for the term "fully populated Property Descriptor"',
    pr: true,
    kind: 'editorial',
    status: 'needs editor',
  },
  {
    number: 1234,
    title: 'Editorial: move Section 25.6 Promise Objects',
    pr: true,
    kind: 'editorial',
    status: 'unsure',
  },
  {
    number: 1228,
    title: 'Informative: (Exponentiation) Add NaN to exponent values whose behavior deviates from IEEE 754-2008',
    pr: true,
    kind: 'editorial',
    status: 'needs editor',
  },
  {
    number: 1227,
    title: 'Bug: ModuleEvaluation had breaking change to not return completion value',
    pr: false,
    kind: 'bugfix',
    status: 'unsure',
  },
  {
    number: 1224,
    title: 'Runtime Semantics for MemberExpression do not conform to web reality(?)',
    pr: false,
    kind: 'not an issue',
    status: 'unsure',
    notes: 'longstanding evaluation order inconsistencies between spec and browsers for property assignment. see also #467',
  },
  {
    number: 1222,
    title: 'WhiteSpace/LineTerminator/LineTerminatorSequence definitions are not rendered properly',
    pr: false,
    kind: 'editorial',
    status: 'unsure',
    notes: 'duplicate of #1334',
  },
  {
    number: 1219,
    title: '[Informative] Observable changes because of Unicode 11',
    pr: false,
    kind: 'not an issue',
    status: 'unsure',
    notes: 'issue lists changes to ECMAScript programs as a result of unicode 11',
  },
  {
    number: 1209,
    title: 'Object.keys throws for uninitialized module namespace object',
    pr: false,
    kind: 'normative',
    status: 'needs work',
    notes: 'no one has figured out how to spec the requested behavior. unclear if requested behavior would get consensus.',
  },
  {
    number: 1205,
    title: 'Empty object destructuring could tolerate null and undefined',
    pr: false,
    kind: 'normative',
    status: 'needs committee',
    notes: 'proposal is to allow `({} = null)` to not error',
  },
  {
    number: 1203,
    title: 'What is difference between VarDeclaredNames and VarScopedDeclarations?',
    pr: false,
    kind: 'not an issue',
    status: 'needs work',
  },
  {
    number: 1197,
    title: 'What is means digest in ECMAScript document?',
    pr: false,
    kind: 'not an issue',
    status: 'unsure',
  },
  {
    number: 1195,
    title: 'Explicit specification on the evaluation ordering',
    pr: false,
    kind: 'normative',
    status: 'unsure',
  },
  {
    number: 1194,
    title: "Symbols can't be used as WeakMap keys",
    pr: false,
    kind: 'normative',
    status: 'needs committee',
  },
  {
    number: 1193,
    title: "Added 'yield' example for line terminator grammar restrictions.",
    pr: true,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 1192,
    title: "Should the note about restricted productions include expressionless 'yield'?",
    pr: false,
    kind: 'editorial',
    status: 'blocked',
    notes: 'fixed by #1193',
  },
  {
    number: 1183,
    title: 'Editorial: replace obj.[[Get]](j) with Get(obj, j)',
    pr: true,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 1180,
    title: 'obj.[[Get]](j) in Array.prototype.sort section lacks the 2nd argument',
    pr: false,
    kind: 'editorial',
    status: 'blocked',
    notes: 'fixed by #1183',
  },
  {
    number: 1176,
    title: 'Inconsistencies and errors in the time range supported by Date',
    pr: false,
    kind: 'editorial',
    status: 'needs specialist',
  },
  {
    number: 1174,
    title: 'Normative: Add `export * as ns from "mod”` to Export production and Module Semantic',
    pr: true,
    kind: 'normative',
    status: 'pending stage 4',
  },
  {
    number: 1172,
    title: 'Make Async-from-Sync iterator object inaccessible to ECMAScript code',
    pr: false,
    kind: 'bugfix',
    status: 'needs work',
  },
  {
    number: 1170,
    title: 'Move AsyncFunction section next to AsyncGenerator section?',
    pr: false,
    kind: 'editorial',
    status: 'blocked',
    notes: 'fixed by #1234',
  },
  {
    number: 1167,
    title: 'Analytics on TC39 sites, e.g., the specification page',
    pr: false,
    kind: 'not an issue',
    status: 'unsure',
  },
  {
    number: 1166,
    title: 'Suggestion: add Issue/PR templates to this repo',
    pr: false,
    kind: 'not an issue',
    status: 'needs work',
  },
  {
    number: 1160,
    title: 'Editorial: LocalTZA input specification',
    pr: true,
    kind: 'editorial',
    status: 'needs editor',
  },
  {
    number: 1159,
    title: 'Why does FunctionDeclaration allow the name to be omitted?',
    pr: false,
    kind: 'not an issue',
    status: 'unsure',
  },
  {
    number: 1158,
    title: 'Normative: Extend definition of "function code"',
    pr: true,
    kind: 'normative',
    status: 'needs editor',
    notes: 'related to #1137',
  },
  {
    number: 1154,
    title: 'Odd behavior with [[Set]] on non-frozen objects inheriting from frozen objects',
    pr: false,
    kind: 'editorial',
    status: 'blocked',
    notes: 'this is the "override mistake"',
  },
  {
    number: 1152,
    title: 'Clarify Map/Set intro notes',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 1148,
    title: 'Editorial: remove unnecessary AddRestrictedFunctionProperties',
    pr: true,
    kind: 'normative',
    status: 'needs committee',
    notes: 'see #877',
  },
  {
    number: 1139,
    title: 'Missing IsFunctionDefinition for anonymous FunctionExpression',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
    notes: 'bug in ecmarkup',
  },
  {
    number: 1138,
    title: 'Create an automated way to render diffs of the spec introduced by proposals',
    pr: false,
    kind: 'not an issue',
    status: 'needs work',
  },
  {
    number: 1137,
    title: 'Editorial: clarify when early errors for functions apply',
    pr: true,
    kind: 'editorial',
    status: 'needs editor',
    notes: 'related to #1158',
  },
  {
    number: 1136,
    title: 'normative: allow await in parameter defaults (#917)',
    pr: true,
    kind: 'normative',
    status: 'needs committee',
  },
  {
    number: 1135,
    title: 'Editorial: Explicitly note mathematical values',
    pr: true,
    kind: 'editorial',
    status: 'needs editor',
  },
  {
    number: 1133,
    title: 'change misuse of "idempotent" to something else',
    pr: false,
    kind: 'editorial',
    status: 'needs editor',
  },
  {
    number: 1126,
    title: 'Normative: Redefine CatchParameter as FormalParameter',
    pr: true,
    kind: 'normative',
    status: 'needs committee',
    notes: 'would allow defaults for catch parameter',
  },
  {
    number: 1124,
    title: 'Normative: Remove ToUint32 from array literal evaluation',
    pr: true,
    kind: 'normative',
    status: 'needs committee',
  },
  {
    number: 1121,
    title: 'Allow set default value to CatchParameter',
    pr: false,
    kind: 'normative',
    status: 'blocked',
    notes: 'fixed by #1126',
  },
  {
    number: 1120,
    title: 'Unconditionally exposing domain specific API for all scripts',
    pr: false,
    kind: 'not an issue',
    status: 'unsure',
  },
  {
    number: 1118,
    title: 'Fix Promise.prototype.finally to not incur extra ticks',
    pr: true,
    kind: 'normative',
    status: 'blocked',
    notes: 'blocked on #1250, "reduce ticks in async/await"',
  },
  {
    number: 1114,
    title: 'Unwrap proxies for native methods.',
    pr: false,
    kind: 'normative',
    status: 'needs committee',
  },
  {
    number: 1105,
    title: 'Editorial: Add a few well-known intrinsic objects',
    pr: true,
    kind: 'editorial',
    status: 'needs editor',
  },
  {
    number: 1104,
    title: 'ToObject should specify what realm it uses',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 1095,
    title: 'Index conversion in ArrayAccumulation',
    pr: false,
    kind: 'normative',
    status: 'blocked',
    notes: 'fixed by #1124',
  },
  {
    number: 1090,
    title: 'Archive the ECMAScript wiki',
    pr: false,
    kind: 'not an issue',
    status: 'needs work',
  },
  {
    number: 1088,
    title: 'add a LICENSE file',
    pr: true,
    kind: 'editorial',
    status: 'unsure',
  },
  {
    number: 1087,
    title: 'MakeDay should be more explicit how unreasonably large numbers are handled',
    pr: false,
    kind: 'normative',
    status: 'needs work',
    notes: 'date stringification langauge is imprecise',
  },
  {
    number: 1086,
    title: 'Editorial: use "is 0" instead of "is zero" for consistency',
    pr: true,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 1085,
    title: 'Post ES2015 breaking change to If statement completion value?',
    pr: false,
    kind: 'normative',
    status: 'unsure',
  },
  {
    number: 1081,
    title: 'Missing [N] in RegExp grammar?',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 1079,
    title: '"Property name" incorrectly linked when used for Unicode property escapes',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
    notes: 'bug in ecmarkup',
  },
  {
    number: 1077,
    title: 'Missing definitions for "<thing> equivalent to a function that <action>"',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 1076,
    title: 'EscapeRegExpPattern: references to Pattern omit setting for N',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 1071,
    title: 'Questions about type Reference in ECMAScript.',
    pr: false,
    kind: 'not an issue',
    status: 'unsure',
  },
  {
    number: 1070,
    title: 'LocalTimeZoneAdjustment/LocalTZA follow-ups necessary',
    pr: false,
    kind: 'editorial',
    status: 'blocked',
    notes: 'fixed by #1160',
  },
  {
    number: 1067,
    title: 'Concrete definitions of Object properties',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 1062,
    title: 'Editorial: Add Automatic Semicolon Insertion hazard clause',
    pr: true,
    kind: 'editorial',
    status: 'needs work',
    notes: 'lol',
  },
  {
    number: 1061,
    title: 'PRs policy',
    pr: false,
    kind: 'not an issue',
    status: 'unsure',
    notes: 'asking about timeframe to merge PRs',
  },
  {
    number: 1060,
    title: 'Is it too late to remove SharedArrayBuffer from the spec?',
    pr: false,
    kind: 'not an issue',
    status: 'unsure',
    notes: 'can probably be closed?',
  },
  {
    number: 1058,
    title: 'Should yield* preserve iteration result identity?',
    pr: false,
    kind: 'normative',
    status: 'needs committee',
  },
  {
    number: 1055,
    title: 'Should %TypedArray%.prototype.slice throw an error if Set throws?',
    pr: false,
    kind: 'normative',
    status: 'needs committee',
  },
  {
    number: 1052,
    title: "Objects created from proxy of bound function don't get  the expected prototype",
    pr: false,
    kind: 'normative',
    status: 'unsure',
  },
  {
    number: 1049,
    title: 'Should anonymous functions get a `name` data property?',
    pr: false,
    kind: 'normative',
    status: 'needs committee',
  },
  {
    number: 1046,
    title: 'Eliminate extra environment for eval in parameter initializers',
    pr: true,
    kind: 'normative',
    status: 'needs editor',
  },
  {
    number: 1040,
    title: 'Editorial: consider renaming IteratorComplete and IteratorValue',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 1036,
    title: 'class extends null with implicit constructor still broken',
    pr: false,
    kind: 'normative',
    status: 'needs committee',
  },
  {
    number: 1035,
    title: 'Normative: Clarification on Date.prototype.to(UTC)String formatting of negative years.',
    pr: false,
    kind: 'normative',
    status: 'needs work',
  },
  {
    number: 1032,
    title: 'Disallow ArrayBuffers bigger than 2**53',
    pr: false,
    kind: 'normative',
    status: 'needs work',
  },
  {
    number: 1022,
    title: 'Editorial: iterator object != iterator record',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 1010,
    title: 'Resolve #1007 - say what the draft reprsents',
    pr: true,
    kind: 'editorial',
    status: 'needs editor',
  },
  {
    number: 1007,
    title: 'Say what the draft represents',
    pr: false,
    kind: 'editorial',
    status: 'blocked',
    notes: 'fixed by #1010',
  },
  {
    number: 991,
    title: 'Legacy hoisting for `function arguments() {}` still not correct?',
    pr: false,
    kind: 'normative',
    status: 'needs specialist',
    notes: 'annex b.3.3',
  },
  {
    number: 985,
    title: 'Keyword and Punctuator productions are an unreadable mess',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
    notes: 'is re: rendering',
  },
  {
    number: 975,
    title: 'Clarify where table 4 applies',
    pr: false,
    kind: 'editorial',
    status: 'unsure',
  },
  {
    number: 972,
    title: 're Number.parseInt cleanup',
    pr: false,
    kind: 'not an issue',
    status: 'unsure',
    notes: 'discussion of a possible future improved parseInt',
  },
  {
    number: 969,
    title: 'Editorial: nested surrogate pairs?',
    pr: false,
    kind: 'editorial',
    status: 'needs specialist',
  },
  {
    number: 966,
    title: 'Editorial: instead of the [Tagged] parameter',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 959,
    title: 'ECMAScript 2017 HTML version - search broken, various 404s and script errors',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 956,
    title: 'Inconsistent margin on ObjectLiteral evaluation semantics',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 955,
    title: 'Add aoid and update calling conventions for directed operations',
    pr: true,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 945,
    title: 'Normative: Evaluate all computed names before any values in object literals',
    pr: true,
    kind: 'normative',
    status: 'needs committee',
  },
  {
    number: 944,
    title: 'JSON.stringify produces invalid UTF-16',
    pr: false,
    kind: 'normative',
    status: 'blocked',
    notes: 'basically proposal-well-formed-stringify',
  },
  {
    number: 938,
    title: 'Include the string to be compiled in the call to `HostEnsureCanCompileStrings`',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 936,
    title: 'inadequate .[[Value]] after ReturnIfAbrupt in 15.2.1.20',
    pr: false,
    kind: 'editorial',
    status: 'blocked',
    notes: 'https://github.com/tc39/ecma262/pull/1355',
  },
  {
    number: 933,
    title: 'Better closures, or promise-handling, in the spec',
    pr: false,
    kind: 'not an issue',
    status: 'unsure',
  },
  {
    number: 929,
    title: 'references missing from references list',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
    notes: 'probably an ecmarkup thing',
  },
  {
    number: 915,
    title: 'Why allow BindingPattern for BindingRestParameter',
    pr: false,
    kind: 'normative',
    status: 'unsure',
  },
  {
    number: 913,
    title: "Annex B.3.3 still doesn't actually allow you to redeclare sloppy functions in block",
    pr: false,
    kind: 'normative',
    status: 'needs specialist',
    notes: 'annex b.3.3',
  },
  {
    number: 912,
    title: 'String.prototype.normalize should reference the Unicode Standard, not Annex 15',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 908,
    title: 'suffix "opt" are missing in one line grammar (ex. 13.7.4.5)',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
    notes: 'ecmarkup bug',
  },
  {
    number: 907,
    title: 'Global getters leak the global object, instead of the global this value?',
    pr: false,
    kind: 'normative',
    status: 'needs work',
  },
  {
    number: 902,
    title: 'Array#sort() inconsistent implementations (support for booleans)',
    pr: false,
    kind: 'not an issue',
    status: 'unsure',
  },
  {
    number: 900,
    title: 'More formal definition of array index',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 897,
    title: 'Agent Clusters note 4 seems broken',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 887,
    title: 'Make Agents / Agent Clusters concepts that work for WebAssembly',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 882,
    title: 'What is an Agent?',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 877,
    title: 'Remove the AddRestrictedFunctionProperties abstract operation',
    pr: false,
    kind: 'normative',
    status: 'needs committee',
  },
  {
    number: 875,
    title: 'Need terminology other than "non-strict" for sloppy functions',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 871,
    title: 'Missing calls to GetActiveScriptOrModule in PerformEval and EnqueueJob?',
    pr: false,
    kind: 'bugfix',
    status: 'blocked',
    notes: 'fixed by #735',
  },
  {
    number: 867,
    title: 'Contradicting forbidden extensions for "caller" property on built-in functions?',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 845,
    title: 'Standardize Date.prototype.toString further?',
    pr: false,
    kind: 'normative',
    status: 'needs work',
  },
  {
    number: 835,
    title: 'Small Atomics changes to reduce duplications',
    pr: true,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 831,
    title: '_symbol_ is an |Identifier| ?',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 830,
    title: 'let/const/class allow local binding of "undefined"',
    pr: false,
    kind: 'normative',
    status: 'needs committee',
  },
  {
    number: 829,
    title: 'Necessary explaination on introduction section',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 828,
    title: 'Editorial: "sequence of code units" != "String" ?',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 824,
    title: 'Move GlobalSymbolRegistry to the Agents record?',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 814,
    title: 'GetFunctionRealm argument',
    pr: false,
    kind: 'not an issue',
    status: 'unsure',
    notes: "basically asking why you can't make a proxy callable by giving it an apply trap",
  },
  {
    number: 808,
    title: 'Mirror changes from issue 410 (ToIndex etc) in the SAB+Atomics space',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 800,
    title: 'Atomics and memory model specification questions/issues',
    pr: false,
    kind: 'not an issue',
    status: 'needs work',
  },
  {
    number: 766,
    title: 'Bookmarks in the PDF document of the standard does not work',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 762,
    title: 'Normative: do not call super constructor when ThisBindingStatus is already initialized',
    pr: true,
    kind: 'normative',
    status: 'blocked',
    notes: 'blocked on implementor performance concerns',
  },
  {
    number: 758,
    title: 'Normative: Allow NaN values to be *optionally* canoncalized',
    pr: true,
    kind: 'normative',
    status: 'unsure',
  },
  {
    number: 749,
    title: '[[GetOwnProperty]] on module namespace exotic object returns writable: true, but [[Set]] is a noop',
    pr: false,
    kind: 'not an issue',
    status: 'unsure',
    notes: 'question asked and answered',
  },
  {
    number: 746,
    title: 'Removal of Object type-check from GetIterator() algorithm',
    pr: false,
    kind: 'normative',
    status: 'needs work',
  },
  {
    number: 735,
    title: 'Layering: fix the jobs infrastructure',
    pr: true,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 726,
    title: 'Issues with normative references to Unicode spec. ',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 722,
    title: 'Star exports and instantiation errors',
    pr: false,
    kind: 'not an issue',
    status: 'needs work',
    notes: 'question about possibly-unnecessary restriction on modules',
  },
  {
    number: 716,
    title: 'HostResolveImportedModule is underspecified WRT ES Source Modules',
    pr: false,
    kind: 'normative',
    status: 'needs work',
  },
  {
    number: 715,
    title: 'Editorial suggestion: TV and TRV usages should link to definition',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
    notes: 'probably ecmarkup',
  },
  {
    number: 703,
    title: "CreateDataProperty is sometimes called with ? but can't throw",
    pr: false,
    kind: 'editorial',
    status: 'needs work',
    notes: 'CreateDataProperty sometimes called without unwrapping completion',
  },
  {
    number: 702,
    title: 'Normative: add `globalThis`',
    pr: true,
    kind: 'normative',
    status: 'pending stage 4',
  },
  {
    number: 697,
    title: 'make Function.prototype.toString forward-compatible and fully defined',
    pr: true,
    kind: 'normative',
    status: 'pending stage 4',
  },
  {
    number: 696,
    title: '`arguments` ordinary vs exotic difference',
    pr: false,
    kind: 'not an issue',
    status: 'unsure',
    notes: 'question asked and [possibly] answered',
  },
  {
    number: 691,
    title: 'Wording for early reference errors',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 688,
    title: 'Layering: add HostObjectDefinePropertyReturnFalse',
    pr: true,
    kind: 'editorial',
    status: 'unsure',
  },
  {
    number: 683,
    title: 'OrdinarySetPrototypeOf and the HTML spec',
    pr: false,
    kind: 'editorial',
    status: 'unsure',
  },
  {
    number: 680,
    title: 'Internal method invariants vague about exceptions',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 678,
    title: 'detached ArrayBuffers are specced to throw often, but implementations do not',
    pr: false,
    kind: 'normative',
    status: 'blocked',
    notes: 'browsers seem to be moving towards throwing',
  },
  {
    number: 676,
    title: 'Annex B.3.3 use cases have a universally-shared bullet with imprecise language',
    pr: true,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 672,
    title: 'WindowProxy and violations of internal method invariants',
    pr: false,
    kind: 'editorial',
    status: 'unsure',
  },
  {
    number: 666,
    title: 'Normative: Add three missing checks in proxy internal methods',
    pr: true,
    kind: 'normative',
    status: 'needs work',
    notes: 'needs test262 tests',
  },
  {
    number: 664,
    title: '`Function.prototype.toString` revision',
    pr: false,
    kind: 'normative',
    status: 'blocked',
    notes: 'fixed by #697',
  },
  {
    number: 663,
    title: '`String.prototype.trim{Start,Left}` & `String.prototype.trim{End,Right}`',
    pr: false,
    kind: 'normative',
    status: 'pending stage 4',
  },
  {
    number: 652,
    title: 'Should proxies be able to lie wrt freezing?',
    pr: false,
    kind: 'normative',
    status: 'blocked',
    notes: 'fixed by #666',
  },
  {
    number: 650,
    title: 'Can you update the callable constructor readme with details on how the examples are solved with decorators instead?',
    pr: false,
    kind: 'not an issue',
    status: 'needs work',
  },
  {
    number: 644,
    title: 'Update Annex E Changes Annex',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 641,
    title: 'Unify String and Array maximum lengths',
    pr: true,
    kind: 'normative',
    status: 'needs committee',
  },
  {
    number: 635,
    title: 'Should ECMAScript implementations be allowed to canonicalize NaN when writing into an Array?',
    pr: false,
    kind: 'normative',
    status: 'blocked',
    notes: 'fixed by #758',
  },
  {
    number: 632,
    title: 'Duplicate parameters of functions whose bodies are strict',
    pr: false,
    kind: 'bugfix',
    status: 'blocked',
    notes: 'fixed by #1158',
  },
  {
    number: 623,
    title: 'Consider dropping the "optimization" for functions without parameter default value initializers',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 603,
    title: 'BoundNames of default exports',
    pr: false,
    kind: 'not an issue',
    status: 'needs work',
  },
  {
    number: 578,
    title: 'Analysis of how implementations handle the required escaping in RegExp#source',
    pr: false,
    kind: 'normative',
    status: 'needs work',
  },
  {
    number: 573,
    title: 'Formalize [[Realm]] internal slot of ordinary objects',
    pr: false,
    kind: 'editorial',
    status: 'needs specialist',
  },
  {
    number: 570,
    title: 'NcapturingParens incorrectly formatted in AtomEscape definition in Annex B',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
    notes: 'probably ecmarkup',
  },
  {
    number: 568,
    title: "The '?' and '!' syntax in algorithms is very poorly chosen",
    pr: false,
    kind: 'editorial',
    status: 'unsure',
  },
  {
    number: 562,
    title: 'Add Function#caller and Function#arguments to Annex B',
    pr: false,
    kind: 'normative',
    status: 'unsure',
  },
  {
    number: 554,
    title: 'Please add IDs to the definitions of ?/! specification syntax',
    pr: false,
    kind: 'editorial',
    status: 'unsure',
  },
  {
    number: 545,
    title: "Replace each abstract op's preamble with a structured 'header'.",
    pr: true,
    kind: 'editorial',
    status: 'needs editor',
    notes: 'relevant to webIDL discussions',
  },
  {
    number: 541,
    title: 'Clarify that not all Built-in Function Objects have a [[Construct]] hook',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 539,
    title: 'Editorial: Remove function-specific text from object-specific section',
    pr: true,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 538,
    title: "Implement meta-object trap(s) to make an object's [[Prototype]] immutable",
    pr: false,
    kind: 'normative',
    status: 'needs committee',
  },
  {
    number: 536,
    title: '14.1.12 Static Semantics: IsFunctionDefinition',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
    notes: 'bug in ecmarkup',
  },
  {
    number: 535,
    title: 'Response to the proposal to add explicit tail call syntax to ECMAScript',
    pr: false,
    kind: 'not an issue',
    status: 'unsure',
  },
  {
    number: 532,
    title: 'Intro of Section 18: The global object is unique *per realm*',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 531,
    title: 'Move function-specific text out of "Standard Built-in Objects"',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 529,
    title: 'Is "NewTarget" defined anywhere? If so, can we get a <dfn>?',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 521,
    title: 'Consider adding an informative note about the immutability of the arguments binding in strict functions',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 508,
    title: 'Allow cross-realm tail calls to consume linear resources.',
    pr: true,
    kind: 'normative',
    status: 'needs committee',
  },
  {
    number: 497,
    title: 'eliminating implicit conversions to/from Completion Records',
    pr: false,
    kind: 'editorial',
    status: 'needs editor',
  },
  {
    number: 496,
    title: "abstract operations don't always return Completion Records",
    pr: false,
    kind: 'editorial',
    status: 'needs editor',
  },
  {
    number: 486,
    title: '!? usage',
    pr: false,
    kind: 'editorial',
    status: 'needs editor',
  },
  {
    number: 467,
    title: 'Reference type and implementation reality',
    pr: false,
    kind: 'normative',
    status: 'unsure',
  },
  {
    number: 461,
    title: 'Internal List data structure semantics and its implications in section 9.5.11',
    pr: false,
    kind: 'editorial',
    status: 'needs committee',
  },
  {
    number: 455,
    title: "TypedArray constructors don't call the species constructor for ArrayBuffers they create.",
    pr: false,
    kind: 'normative',
    status: 'blocked',
    notes: 'needs discussion of Symbol.species',
  },
  {
    number: 429,
    title: 'WeakMap and WeakSet: state explicitly that you cannot modify an entry if you have not access to the key',
    pr: false,
    kind: 'editorial',
    status: 'unsure',
  },
  {
    number: 404,
    title: 'Allow non-HTML-encoded entities',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
    notes: 'ecmarkup',
  },
  {
    number: 401,
    title: 'Allow script aborting?',
    pr: false,
    kind: 'normative',
    status: 'needs committee',
  },
  {
    number: 395,
    title: 'Built-in Modules',
    pr: false,
    kind: 'normative',
    status: 'needs committee',
  },
  {
    number: 385,
    title: 'Add <dfn>s for all the well-known symbols (and make sure they link)',
    pr: false,
    kind: 'editorial',
    status: 'needs editor',
  },
  {
    number: 364,
    title: 'Figure 2 (generator object model) needs updating',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 354,
    title: 'Spec convention for branding',
    pr: false,
    kind: 'editorial',
    status: 'needs committee',
  },
  {
    number: 333,
    title: 'Rewrite References as Records',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 311,
    title: 'Add a notation for static and runtime semantics attached to grammar productions.',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 302,
    title: 'SortCompare (Array#sort)',
    pr: false,
    kind: 'normative',
    status: 'needs committee',
  },
  {
    number: 289,
    title: 'A.p.join on cyclic arrays does not reflect web reality',
    pr: false,
    kind: 'normative',
    status: 'needs committee',
  },
  {
    number: 258,
    title: 'Remove "Runtime Semantics:" prefix throughout the spec',
    pr: false,
    kind: 'editorial',
    status: 'needs editor',
  },
  {
    number: 257,
    title: 'Annex E incompatibilities should include "early Reference Error"',
    pr: false,
    kind: 'editorial',
    status: 'needs editor',
  },
  {
    number: 255,
    title: 'Editorial: <5.1.5 Grammar Notation> production parameterization example mistakes?',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 253,
    title: 'Notate abstract ops that can and cannot throw',
    pr: false,
    kind: 'editorial',
    status: 'needs work',
  },
  {
    number: 204,
    title: 'Review of function.sent',
    pr: false,
    kind: 'not an issue',
    status: 'unsure',
    notes: 'anyone working on function.sent?',
  },
  {
    number: 197,
    title: 'JP22: "20.3.1.16 Date Time String Format" is not clear for "2000-02-31", "2015-01-01T24:59:00"',
    pr: false,
    kind: 'normative',
    status: 'unsure',
    notes: 'date parsing!',
  },
  {
    number: 195,
    title: 'JP22: 20.3.1.1 Time Values and Time Range',
    pr: false,
    kind: 'normative',
    status: 'unsure',
    notes: 'date parsing!',
  },
  {
    number: 137,
    title: 'Annex B: Specify non-standard RegExp static properties',
    pr: false,
    kind: 'normative',
    status: 'blocked',
    notes: 'corresponds to proposal-regexp-legacy-features, currently stage 3',
  },
  {
    number: 128,
    title: 'Unicode RegExp with index points trail surrogate in surrogate pair is not covered in the spec',
    pr: false,
    kind: 'bugfix',
    status: 'needs work',
  },
  {
    number: 3,
    title: 'Standard proposal format?',
    pr: false,
    kind: 'not an issue',
    status: 'needs work',
  },
];
